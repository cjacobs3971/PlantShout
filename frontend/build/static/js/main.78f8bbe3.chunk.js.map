{"version":3,"sources":["components/LoginRegister.js","images/AphidAI.png","components/MainPage.js","App.js","index.js"],"names":["LoginRegister","isLogin","setIsLogin","useState","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","event","preventDefault","email","target","value","password","baseURL","response","axios","post","concat","status","localStorage","setItem","data","token","user_id","alert","message","error","console","loginResponse","type","name","placeholder","required","onClick","MainPage","posts","setPosts","category","setCategory","tags","setTags","title","setTitle","text","setText","image","setImage","commentText","setCommentText","commentPostId","setCommentPostId","useEffect","get","then","catch","handleLogout","removeItem","formData","FormData","append","getItem","config","headers","Authorization","onChange","e","map","postId","userId","post_id","handleCommentSubmit","id","comments","comment","src","user_profile_pic","alt","clssName","AphidAI","ai_response","App","Router","Routes","Route","path","element","Navigate","to","container","document","getElementById","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.78f8bbe3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginRegister = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n\n    const baseURL = 'https://plantshout-199a76bab95e.herokuapp.com';\n\n    if (isLogin) {\n      try {\n        const response = await axios.post(`${baseURL}/api/login`, { email, password });\n        if (response.status === 200) {\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem(\"user_id\", response.data.user_id);\n          navigate('/main'); // Navigate to main page on successful login\n        } else {\n          alert(response.data.message);\n        }\n      } catch (error) {\n        console.error('Error logging in:', error);\n        alert('Failed to login');\n      }\n    } else {\n      try {\n        const response = await axios.post(`${baseURL}/api/register`, { email, password });\n        if (response.status === 201) {\n          const loginResponse = await axios.post(`${baseURL}/api/login`, { email, password });\n        if (loginResponse.status === 200) {\n          localStorage.setItem('token', loginResponse.data.token);\n          localStorage.setItem('user_id', loginResponse.data.user_id); // Store user_id\n          navigate(\"/main\");\n        } // Switch to login view after successful registration\n        } else {\n          alert(response.data.message);\n        }\n      } catch (error) {\n        console.error('Error registering:', error.response ? error.response.data : error);\n        alert('Failed to register');\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-register\">\n      <form onSubmit={handleSubmit}>\n        <h2>{isLogin ? 'Login' : 'Register'}</h2>\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n        {!isLogin && <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" required />}\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\n        <p onClick={() => setIsLogin(!isLogin)}>\n          {isLogin ? \"Don't have an account? Register\" : 'Already have an account? Login'}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginRegister;\n\n","export default __webpack_public_path__ + \"static/media/AphidAI.fb7d1a23.png\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AphidAI from '../images/AphidAI.png';\nimport { useNavigate } from 'react-router-dom';\n\nconst MainPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [category, setCategory] = useState('');\n  const [tags, setTags] = useState('');\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [image, setImage] = useState(null);\n  const [commentText, setCommentText] = useState('');\n  const [commentPostId, setCommentPostId] = useState(null);\n  const navigate = useNavigate();\n\n  const baseURL = 'https://plantshout-199a76bab95e.herokuapp.com';\n\n  useEffect(() => {\n    axios.get(`${baseURL}/api/posts`)\n      .then(response => setPosts(response.data))\n      .catch(error => console.error('Error fetching posts:', error));\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('category', category);\n    formData.append('tags', tags);\n    formData.append('title', title);\n    formData.append('text', text);\n    formData.append('user_id', localStorage.getItem('user_id'));\n    if (image) formData.append('image', image);\n\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    try {\n      await axios.post(`${baseURL}/api/posts`, formData, config);\n      setCategory('');\n      setTags('');\n      setTitle('');\n      setText('');\n      setImage(null);\n      axios.get(`${baseURL}/api/posts`).then((response) => setPosts(response.data)); // Refresh posts\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\nconst handleCommentSubmit = async (event, postId) => {\n    event.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"user_id\");\n    const config = {\n      headers:  {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n  try {\n    await axios.post(`${baseURL}/api/comments`, {\n      text: commentText,\n      post_id: postId,\n      user_id: userId,\n    }, config);\n    setCommentText(\"\");\n    setCommentPostId(null)\n    axios.get(`${baseURL}/api/posts`).then((response) => setPosts(response.data));\n  } catch(error) {\n    console.error(\"error adding comment: \", error);\n  }\n};\n\n  return (\n    <div className=\"main-page\">\n      <header>\n        <h1>Welcome to Plant Shout</h1>\n        <button onClick={handleLogout}>Logout</button>\n      </header>\n      <div className=\"info\">\n        <h2>Home of the plant help, this is an anonymous help page for plant enthusiasts\n          where you can get help instantly through the power of AI as well as help\n          from other people around the world.</h2>\n        <h2>Sometimes we need an immediate response, we get it, just select the question category and fill in the areas.\n          Once youve hit submit post youll get an instant comment from an AI trying to help.\n          if you dont need an immediate response, dont like the idea of using an AI, or just want\n          to start a discussion with other people then select the discussion category and continue just like last time.</h2>\n      </div>\n      <div className=\"post-form\">\n        <h2>Create Post</h2>\n        <form onSubmit={handleSubmit}>\n          <select value={category} onChange={(e) => setCategory(e.target.value)} required>\n            <option value=\"\">Select Category</option>\n            <option value=\"question\">Question</option>\n            <option value=\"discussion\">Discussion</option>\n          </select>\n          <input\n            type=\"text\"\n            placeholder=\"Tags\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n          <textarea\n            placeholder=\"Text Here\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            required\n          ></textarea>\n          {/*<input type=\"file\" onChange={(e) => setImage(e.target.files[0])} /> */}\n          {/* change this section when chatgpt api endpoint is fixed for images */}\n          <button type=\"submit\">Submit Post</button>\n        </form>\n      </div>\n      <div className=\"feed\">\n        {posts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <h2>{post.title}</h2>\n            <h3>{post.text}</h3>\n            <form onSubmit={(e) => handleCommentSubmit(e, post.id)}>\n              <textarea\n              placeholder = \"Write a comment here\"\n              value = {commentPostId === post.id ? commentText : \"\"}\n              onChange = {(e) => {\n                setCommentPostId(post.id);\n                setCommentText(e.target.value)\n              }}\n              required\n              ></textarea>\n              <button type=\"submit\">Post Comment</button>\n            </form>\n            <div className=\"comments\">\n              {post.comments &&\n                post.comments.map((comment) => (\n                  <div key={comment.id} className=\"comment\">\n                    <div className=\"user_picture\">\n                      <img src={`http://127.0.0.1:5000/profile_pics/${comment.user_profile_pic}`} alt=\"Profile\" />\n                    </div>\n                    <p>{comment.text}</p>\n                  </div>\n                ))}\n              <div className=\"comment\">\n                <div clssName = \"AI_picture\">\n                  <img src={AphidAI} alt=\"AphidAI\" />\n                </div>\n                <p>{post.ai_response}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LoginRegister from './components/LoginRegister';\nimport MainPage from './components/MainPage';\n\nconst App = () => {\n  const isAuthenticated = () => {\n    return localStorage.getItem('token') !== null;\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<LoginRegister />} />\n        <Route path=\"/main\" element={isAuthenticated() ? <MainPage /> : <Navigate to=\"/login\" />} />\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}